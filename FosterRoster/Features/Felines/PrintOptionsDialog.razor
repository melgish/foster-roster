@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using FosterRoster.Features.Weights
@inject DialogService DialogService
@inject ProtectedLocalStorage LocalStorage

<RadzenStack>
    <EditForm Model="_model">
        <RadzenRow>
            <RadzenColumn>
                <RadzenCheckBoxList
                    TValue="PrintSection"
                    Value="_model.SelectedPrintSections"
                    ValueChanged="@(arg => _model.SelectedPrintSections = [.. arg])"
                    Orientation="Orientation.Vertical">
                    <Items>
                        @foreach (var item in PrintOptions.PrintSections)
                        {
                            <RadzenCheckBoxListItem Value="@item" Text="@item.ToString()"/>
                        }
                    </Items>
                </RadzenCheckBoxList>
            </RadzenColumn>
            <RadzenColumn>
                <WeightUnitSelect @bind-Value="_model.Units"/>
            </RadzenColumn>
        </RadzenRow>
    </EditForm>
    <RadzenStack
        AlignItems="AlignItems.Center"
        Gap="0.5rem"
        JustifyContent="JustifyContent.End"
        Orientation="Orientation.Horizontal">
        <RadzenLink Path="@Path" Target="print">
            <RadzenButton
                ButtonStyle="ButtonStyle.Secondary"
                Click="@PersistOptions"
                Size="ButtonSize.Small"
                Text="Print"
                Variant="Variant.Outlined"/>
        </RadzenLink>
        <RadzenButton
            ButtonStyle="ButtonStyle.Base"
            Click="@Cancel"
            Size="ButtonSize.Small"
            Text="Close"
            Variant="Variant.Outlined"/>
    </RadzenStack>
</RadzenStack>

@code {
    [Parameter] public int FelineId { get; set; }

    private PrintOptions _model = new();

    private string Path => $"/felines/{FelineId}/print{_model}";

    void Cancel() => DialogService.Close();

    protected override async Task OnInitializedAsync()
    {
        var rs = await LocalStorage.GetAsync<PrintOptions>(nameof(PrintOptions));
        _model = rs.Value ?? new();
    }

    async Task PersistOptions()
    {
        await InvokeAsync(StateHasChanged);
        await LocalStorage.SetAsync(nameof(PrintOptions), _model);

        DialogService.Close();
    }

}