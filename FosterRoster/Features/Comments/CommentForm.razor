@if (Model is null)
{
    <AppLoading/>
}
else
{
    <EditForm FormName="newComment"
              Model="@Model"
              OnValidSubmit="@(() => OnSave.InvokeAsync(Model))">
        <FluentValidationValidator/>
        <RadzenHtmlEditor @bind-Value="Model.Text">
            @if (Model.Id != 0)
            {
                <RadzenHtmlEditorCustomTool>
                    <Template Context="tool">
                        <RadzenButton ButtonStyle="ButtonStyle.Danger"
                                      ButtonType="ButtonType.Button"
                                      Click="@(() => OnDelete.InvokeAsync())"
                                      Size="ButtonSize.Small"
                                      Style="margin-top:0.125rem"
                                      Text="Delete"
                                      Variant="Variant.Outlined"/>
                    </Template>
                </RadzenHtmlEditorCustomTool>
            }
            <RadzenHtmlEditorCustomTool>
                <Template Context="tool">
                    <RadzenButton ButtonStyle="ButtonStyle.Primary"
                                  ButtonType="ButtonType.Submit"
                                  Disabled="tool.Disabled"
                                  Size="ButtonSize.Small"
                                  Style="margin-top:0.125rem"
                                  Text="Save"
                                  Variant="Variant.Outlined"/>
                </Template>
            </RadzenHtmlEditorCustomTool>
            @if (Model.Id != 0)
            {
                <RadzenHtmlEditorCustomTool>
                    <Template Context="tool">
                        <RadzenButton ButtonStyle="ButtonStyle.Secondary"
                                      ButtonType="ButtonType.Button"
                                      Click="@(() => OnCancel.InvokeAsync())"
                                      Size="ButtonSize.Small"
                                      Style="margin-top:0.125rem"
                                      Text="Reset"
                                      Variant="Variant.Outlined"/>
                    </Template>
                </RadzenHtmlEditorCustomTool>
            }
            <RadzenHtmlEditorSeparator/>
            <RadzenHtmlEditorUndo/>
            <RadzenHtmlEditorRedo/>
            <RadzenHtmlEditorSeparator/>
            <RadzenHtmlEditorBold/>
            <RadzenHtmlEditorItalic/>
            <RadzenHtmlEditorSeparator/>
            <RadzenHtmlEditorAlignLeft/>
            <RadzenHtmlEditorAlignCenter/>
            <RadzenHtmlEditorAlignRight/>
            <RadzenHtmlEditorSeparator/>
            <RadzenHtmlEditorIndent/>
            <RadzenHtmlEditorOutdent/>
        </RadzenHtmlEditor>
        <ValidationMessage For="@(() => Model.Text)"/>
    </EditForm>
}

@code
{
    [Parameter] public CommentFormDto? Model { get; set; }

    [Parameter] public EventCallback<CommentFormDto> OnSave { get; set; }

    [Parameter] public EventCallback OnCancel { get; set; }

    [Parameter] public EventCallback OnDelete { get; set; }
}
