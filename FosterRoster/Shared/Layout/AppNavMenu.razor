@using System.Reflection
@implements IDisposable
@inject NavigationManager NavigationManager

<RadzenMenu Responsive="true" @ref="_menu">
    <li class="rz-navigation-item">
        <div class="rz-navigation-item-wrapper">
            <h4 class="rz-px-2 rz-py-0 rz-ma-0">Foster Roster</h4>
        </div>
    </li>
    <AuthorizeView>
        <NotAuthorized>
            <RadzenMenuItem Path="/" Text="Dashboard" Match="NavLinkMatch.All"/>
        </NotAuthorized>
    </AuthorizeView>
    <AuthorizeView>
        <Authorized>
            <RadzenMenuItem Path="/" Text="Dashboard" Match="NavLinkMatch.All"/>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Roles="Admin,User">
        <Authorized>
            <RadzenMenuItem Path="/planner" Text="Planner"/>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView>
        <Authorized>
            <RadzenMenuItem Path="/weights" Text="Weights"/>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Roles="Admin,User">
        <Authorized>
            <RadzenMenuItem Path="/felines" Text="Felines"/>
            <RadzenMenuItem Path="/vaccinations" Text="Vaccinations"/>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Roles="Admin">
        <RadzenMenuItem Text="Admin">
            <RadzenMenuItem Path="/fosterers" Text="Fosterers"/>
            <RadzenMenuItem Path="/sources" Text="Sources"/>
            <RadzenMenuItem Path="/tasks" Text="Tasks"/>
            <RadzenMenuItem Path="/users" Text="Users"/>
        </RadzenMenuItem>
    </AuthorizeView>
    <AuthorizeView>
        <NotAuthorized>
            <RadzenMenuItem Path="/account/login" Text="Login" Match="NavLinkMatch.All" Style="margin-left:auto"/>
        </NotAuthorized>
        <Authorized>
            <RadzenProfileMenu Style="margin-left: auto;padding-left: 0">
                <Template>@context.User.Identity?.Name</Template>
                <ChildContent>
                    <form action="@("account/logout")" method="post" name="logoutForm">
                        <AntiforgeryToken/>
                        <input type="hidden" name="ReturnUrl" value="@_currentUrl"/>
                    </form>
                    <RadzenProfileMenuItem Text="Logout" Path="javascript:document.forms['logoutForm'].submit();"/>
                    <RadzenProfileMenuItem Path="/account/manage/changePassword" Text="Change Password"/>
                </ChildContent>
            </RadzenProfileMenu>
        </Authorized>
    </AuthorizeView>
    <RadzenMenuItem>
        <Template>
            <RadzenAppearanceToggle Variant="Variant.Text"/>
        </Template>
    </RadzenMenuItem>
    <RadzenMenuItem Path="https://github.com/melgish/foster-roster" Target="_blank">
        <Template>
            <GitHubIcon/>
        </Template>
    </RadzenMenuItem>
</RadzenMenu>

@code {
    private string? _currentUrl;
    private RadzenMenu _menu = null!;

    [CascadingParameter] private HttpContext? HttpContext { get; set; }

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);

        // Hack to close menu when navigating.
        _menu.GetType()
            .GetProperty("IsOpen", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public)
            ?.SetValue(_menu, false);

        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}