<RadzenDataGrid 
    TItem="Source" 
    Data="@Items"
    Density="Density.Compact"
    >
    <HeaderTemplate>
        <RadzenStack
            AlignItems="AlignItems.Center"
            class="rz-w-100"
            JustifyContent="JustifyContent.SpaceBetween"
            Orientation="Orientation.Horizontal">
            <RadzenText Text="Sources" TextStyle="TextStyle.DisplayH6" Style="margin: 0"/>
            <div style="margin-right: auto"></div>
            <RadzenButton
                ButtonStyle="ButtonStyle.Primary"
                Click="@(() => OnAdd.InvokeAsync())"
                Icon="add"
                Size="ButtonSize.Small"
                Text="Add"
                Variant="Variant.Outlined"/>
        </RadzenStack>
    </HeaderTemplate>
    <Columns>
        <RadzenDataGridColumn Width="12ch">
            <Template Context="data">
                <RadzenButton ButtonStyle="ButtonStyle.Info"
                              Click="@(() => OnEdit.InvokeAsync(data.Id))"
                              Size="ButtonSize.Small"
                              Text="Edit"
                              Variant="Variant.Outlined"/>
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(Fosterer.Name)" Title="@nameof(Fosterer.Name)"/>
    </Columns>
</RadzenDataGrid>

@code {
    [Parameter] public ICollection<Source> Items { get; set; } = [];
    [Parameter] public EventCallback OnAdd { get; set; } = EventCallback.Empty;
    [Parameter] public EventCallback<int> OnEdit { get; set; } = EventCallback<int>.Empty;
}