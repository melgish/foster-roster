@page "/intake"
@rendermode InteractiveWebAssembly
@inject TimeProvider TimeProvider
@inject NavigationManager NavigationManager
@inject IFelineRepository FelineRepository
@inject ISnackbar Snackbar

<PageTitle>Intake</PageTitle>
@if (feline is null)
{
    <p>Loading...</p>
}
else
{
    <MudStack>
        <MudPaper Class="pa-2" Elevation="3">
            <FelineEditForm Feline="@feline" IsNew OnSave="OnSaveAsync" />
        </MudPaper>
    </MudStack>
}

@code {
    private Feline feline = null!;
    protected override void OnInitialized()
    {
        feline = new()
        {
            IntakeDate = DateOnly.FromDateTime(TimeProvider.GetLocalNow().DateTime),
            Category = Category.Kitten,
            Gender = Gender.Female,
            Thumbnail = null,
            Weaned = Weaned.Yes
        };
    }

    /// <summary>
    /// Save event handler for the FelineEditForm
    /// </summary>
    private async Task OnSaveAsync(FelineEditModel model)
    {
        var added = await FelineRepository.AddAsync(model.ToFeline());
        if (added is null)
        {
            Snackbar.Add("Failed to save", Severity.Error);
            return;
        }
        NavigationManager.NavigateTo($"/details/{added.Id}");
    }
}
