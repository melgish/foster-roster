@page "/"
@rendermode InteractiveWebAssembly
@implements IDisposable
@inject IFelineRepository FelineRepository
@inject PersistentComponentState ComponentState;

<PageTitle>Dashboard</PageTitle>
@if (_felines is null)
{
    <Loading />
}
else
{
    <div class="deck">
        @foreach (var feline in _felines)
        {
            <FelineCard @key="feline.Id"
                        Feline="@feline"
                        FelineChanged="@OnFelineChanged" />
        }
    </div>
}

@code {
    private ICollection<Feline>? _felines;
    private IDisposable? _stateSubscription;

    public void Dispose() => _stateSubscription?.Dispose();

    private void OnFelineChanged(Feline feline)
        => _felines = _felines!.Select(f => f.Id == feline.Id ? feline : f).ToList();

    protected override async Task OnInitializedAsync()
    {
        _stateSubscription = ComponentState.RegisterOnPersisting(PersistStateAsync);
        ComponentState.TryTakeFromJson("felines", out _felines);
        _felines ??= await FelineRepository.GetAllAsync();
    }
    private Task PersistStateAsync()
    {
        ComponentState.PersistAsJson("felines", _felines);
        return Task.CompletedTask;
    }
}
