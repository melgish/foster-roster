@inject TimeProvider TimeProvider

@if (Comment is not null) {
    <MudPaper Elevation="2" Outlined="true">
        <MudStack>
            <MudStack Row Class="px-1"
                AlignItems="AlignItems.Center"
                Justify="Justify.SpaceBetween">
                <MudText>@Comment.TimeStamp.ToLocalTime().DateTime.ToString() <small>(@Comment.FormatAgo(now))</small></MudText>
                <MudIconButton Color="Color.Error"
                               Icon="@Icons.Material.TwoTone.Delete"
                               OnClick="() => OnDelete.InvokeAsync(Comment)"
                               Size="Size.Small"
                               Variant="Variant.Text" />
            </MudStack>
            <div style="padding: 0.25rem;">@html</div>
        </MudStack>
    </MudPaper>
}

@code {
    [Parameter]
    public Comment Comment { get; set; } = null!;

    [Parameter]
    public EventCallback<Comment> OnDelete { get; set; }

    private MarkupString? html = null;

    private DateTimeOffset now;
    override protected void OnInitialized()
    {
        now = TimeProvider.GetUtcNow();
        if (Comment is not null)
        {
            html = new(Comment.Text);
        }
    }
}