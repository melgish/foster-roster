<RadzenStack AlignItems="AlignItems.Center"
             Gap="0.5rem"
             JustifyContent="JustifyContent.End"
             Orientation="Orientation.Horizontal">
    @if (Busy)
    {
        <RadzenProgressBarCircular Mode="ProgressBarMode.Indeterminate"
                                   ProgressBarStyle="ProgressBarStyle.Primary"
                                   ShowValue="false"
                                   Size="ProgressBarCircularSize.Small"/>
    }
    @ChildContent
    @if (CanDelete)
    {
        <RadzenButton ButtonStyle="ButtonStyle.Danger"
                      Click="@OnDelete"
                      Disabled="@(Busy || Disabled)"
                      Size="ButtonSize.Small"
                      Text="Delete"
                      Variant="Variant.Outlined"/>
    }
    <RadzenButton ButtonType="ButtonType.Submit"
                  Disabled="@(Busy || Disabled)"
                  Size="ButtonSize.Small"
                  Text="Save"
                  Variant="Variant.Outlined"/>

    <RadzenButton ButtonStyle="ButtonStyle.Secondary"
                  Click="@OnReset"
                  Disabled="@(Busy || Disabled)"
                  Size="ButtonSize.Small"
                  Text="Reset"
                  Variant="Variant.Outlined"/>
</RadzenStack>

@code {

    /// <summary>
    /// When true will display a loading spinner.
    /// </summary>
    [Parameter]
    public bool Busy { get; set; }

    /// <summary>
    /// When true buttons will be disabled.
    /// </summary>
    [Parameter]
    public bool Disabled { get; set; }

    /// <summary>
    /// When true delete button will be displayed.
    /// </summary>
    [Parameter]
    public bool CanDelete { get; set; }

    [Parameter] public EventCallback OnDelete { get; set; }

    [Parameter] public EventCallback OnReset { get; set; }

    [Parameter] public RenderFragment? ChildContent { get; set; }
}