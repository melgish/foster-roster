@inject IFelineRepository FelineRepository;

<MudSelect Label="Name" Value="@Value" ValueChanged="@ValueChanged">
    <MudSelectItem Value="0">Select a name...</MudSelectItem>
    @foreach (var name in _names)
    {
        <MudSelectItem @key="@name.Value" Value="@name.Value">@name.Text</MudSelectItem>
    }
</MudSelect>

@code {
    private List<ListItem<int>> _names = [];

    [Parameter] public int Value { get; set; }

    [Parameter] public EventCallback<int> ValueChanged { get; set; } = EventCallback<int>.Empty;

    protected override async Task OnInitializedAsync()
    {
        _names = await FelineRepository.GetAllNamesAsync();
        await base.OnInitializedAsync();
        // Without this call, the select will display the ID value instead
        // of the associated text.
        await InvokeAsync(StateHasChanged);
    }
}